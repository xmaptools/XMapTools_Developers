#!/usr/bin/env bash
#
# XMapTools ‚Äì Updater for macOS
# Replaces the existing XMapTools.app inside the application folder
# ----------------------------------------------------------------------------

# Avoid treating unset variables as errors
set +u  # Disable "unbound variable" error temporarily
# ----------------------------------------------------------------------------

# ---- Configuration ---------------------------------------------------------
ZIP_URL="${ZIP_URL:-https://xmaptools.ch/releases/XMapTools_macOS.zip}"  # Default value if ZIP_URL is not set
TMP_DIR="${TMP_DIR:-/tmp/xmaptools_update}"
ZIP_PATH="${ZIP_PATH:-$TMP_DIR/XMapTools_macOS.zip}"
APP_NAME="${APP_NAME:-XMapTools.app}"
EXTRACTED_APP_PATH="${EXTRACTED_APP_PATH:-$TMP_DIR/$APP_NAME}"
TARGET_DIR="${TARGET_DIR:-/Applications/XMapTools/application}"
TARGET_APP_PATH="${TARGET_APP_PATH:-$TARGET_DIR/$APP_NAME}"
# ----------------------------------------------------------------------------

# ---- Configuration Debugging ------------------------------------------------
echo "DEBUG: TARGET_DIR = '${TARGET_DIR}'"
echo "DEBUG: TARGET_APP_PATH = '${TARGET_APP_PATH}'"

# ---- Prepare temporary workspace -----------------------------------------
echo "üîß Preparing temporary workspace‚Ä¶"
if [ -d "$TMP_DIR" ]; then
    echo "üßπ Removing leftovers from a previous update‚Ä¶"
    sudo rm -rf "$TMP_DIR"
fi
sudo mkdir -p "$TMP_DIR"

# ---- Download and Unzip ----------------------------------------------------
echo "üì• Downloading latest version of XMapTools‚Ä¶"
# Download the zip file with `sudo curl`
sudo curl -L "$ZIP_URL" -o "$ZIP_PATH"

echo "üì¶ Unzipping app‚Ä¶"
sudo unzip -q "$ZIP_PATH" -d "$TMP_DIR"

if [ ! -d "$EXTRACTED_APP_PATH" ]; then
    echo "‚ùå ERROR: Expected $APP_NAME inside the ZIP archive."
    exit 1
fi

# ---- Check TARGET_DIR exists before proceeding ---------------------------
echo "üîß Checking permissions on $TARGET_DIR"
if [ ! -d "$TARGET_DIR" ]; then
    echo "‚ùå ERROR: Target directory does not exist: $TARGET_DIR"
    exit 1
fi

# Ensure we can write to the target directory
if [ ! -w "$TARGET_DIR" ]; then
    echo "‚ùå ERROR: No write permission to $TARGET_DIR. You may need elevated permissions."
    exit 1
fi

# ---- Remove existing version if present ---------------------------------
echo "üóëÔ∏è  Removing existing XMapTools.app from target location‚Ä¶"
if [ -d "$TARGET_APP_PATH" ]; then
    echo "‚úÖ Existing app found, removing‚Ä¶"
    sudo rm -rf "$TARGET_APP_PATH"
else
    echo "‚ÑπÔ∏è  No previous version found ‚Äî installing fresh."
fi

# ---- Install new version --------------------------------------------------
echo "üìÅ Moving new version to $TARGET_DIR‚Ä¶"
if [ -d "$EXTRACTED_APP_PATH" ]; then
    sudo mv "$EXTRACTED_APP_PATH" "$TARGET_DIR"
    echo "‚úÖ XMapTools.app moved."
else
    echo "‚ùå ERROR: Extracted application not found!"
    exit 1
fi

# ---- Clear Gatekeeper quarantine flag -----------------------------------
echo "üîì Clearing Gatekeeper quarantine flag‚Ä¶"
sudo xattr -c "$TARGET_APP_PATH" || true

echo ""
echo "‚úÖ XMapTools has been updated successfully!"
exit 0